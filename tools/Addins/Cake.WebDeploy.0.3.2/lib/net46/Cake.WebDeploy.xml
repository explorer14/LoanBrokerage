<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cake.WebDeploy</name>
    </assembly>
    <members>
        <member name="T:Cake.WebDeploy.WebDeployAliases">
            <summary>
            Contains Cake aliases for WebDeploy
            </summary>
        </member>
        <member name="M:Cake.WebDeploy.WebDeployAliases.DeployWebsite(Cake.Core.ICakeContext,Cake.WebDeploy.DeploySettings)">
            <summary>
            Deploys the content of a website
            </summary>
            <param name="context">The cake context.</param>
            <param name="settings">The deployment settings.</param>
            <returns>The <see cref="T:Microsoft.Web.Deployment.DeploymentChangeSummary"/> that was applied during the deployment.</returns>
        </member>
        <member name="T:Cake.WebDeploy.WebDeployManager">
            <summary>
            Responsible for deploying packages
            </summary>
        </member>
        <member name="M:Cake.WebDeploy.WebDeployManager.#ctor(Cake.Core.ICakeEnvironment,Cake.Core.Diagnostics.ICakeLog)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.WebDeploy.WebDeployManager" /> class.
            </summary>
            <param name="environment">The environment.</param>
            <param name="log">The log.</param>
        </member>
        <member name="M:Cake.WebDeploy.WebDeployManager.Deploy(Cake.WebDeploy.DeploySettings)">
            <summary>
            Deploys the content of a website
            </summary>
            <param name="settings">The deployment settings.</param>
            <returns>The <see cref="T:Microsoft.Web.Deployment.DeploymentChangeSummary"/> that was applied during the deployment.</returns>
        </member>
        <member name="T:Cake.WebDeploy.DeploySettingsExtensions">
            <summary>
            Contains extension methods for <see cref="T:Cake.WebDeploy.DeploySettings" />.
            </summary>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.SetPublishUrl(Cake.WebDeploy.DeploySettings,System.String)">
            <summary>
            Sets the url to publish that package to
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="url">The publish url</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.UseAgentType(Cake.WebDeploy.DeploySettings,Cake.WebDeploy.RemoteAgent)">
            <summary>
            Sets the type of remote agent to connect to
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="agentType">The type of remote agent</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.UseNTLM(Cake.WebDeploy.DeploySettings,System.Boolean)">
            <summary>
            Sets if NTLM authentication should be used
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="ntlm">use NTLM</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.SetAllowUntrusted(Cake.WebDeploy.DeploySettings,System.Boolean)">
            <summary>
            Sets if untrusted certificates should be allowed
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="untrusted">Allow untrusted certificates</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.UseComputerName(Cake.WebDeploy.DeploySettings,System.String)">
            <summary>
            Sets the computer name on publish to
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="name">The computer name</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.UsePort(Cake.WebDeploy.DeploySettings,System.Int32)">
            <summary>
            Sets the remote port to connect on.
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="port">The remote port to connect on</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.UseSiteName(Cake.WebDeploy.DeploySettings,System.String)">
            <summary>
            Sets the name of the website to publish
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="name">The name of the website to publish</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.UseUsername(Cake.WebDeploy.DeploySettings,System.String)">
            <summary>
            Sets the credentials to use when connecting
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="username">The username to connect with.</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.UsePassword(Cake.WebDeploy.DeploySettings,System.String)">
            <summary>
            Sets the credentials to use when connecting
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="password">The password to connect with.</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.SetTraceLevel(Cake.WebDeploy.DeploySettings,System.Diagnostics.TraceLevel)">
            <summary>
            Sets the logging trace level
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="level">The trace level.</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.SetDelete(Cake.WebDeploy.DeploySettings,System.Boolean)">
            <summary>
            Sets if files that no longer exist should be deleted
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="delete">IF files should be deleted.</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.SetWhatIf(Cake.WebDeploy.DeploySettings,System.Boolean)">
            <summary>
            Sets if operations will not be executed but events will still be fired
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="whatIf">If operations will not be executed</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.FromSourcePath(Cake.WebDeploy.DeploySettings,System.String)">
            <summary>
            Sets the source of the package to publish
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="path">The path to the package to publish</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.ToDestinationPath(Cake.WebDeploy.DeploySettings,System.String)">
            <summary>
            Sets the destination of the package to publish to
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="path">The path where the package should end up</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.AddParameter(Cake.WebDeploy.DeploySettings,System.String,System.String)">
            <summary>
            Adds the parameter.
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.AddSkipRule(Cake.WebDeploy.DeploySettings,Cake.WebDeploy.SkipRule)">
            <summary>
            Adds a <see cref="T:Cake.WebDeploy.SkipRule" />.
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="rule">The rule.</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.AddSkipRule(Cake.WebDeploy.DeploySettings,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a <see cref="T:Cake.WebDeploy.SkipRule" />.
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="name">The name.</param>
            <param name="skipAction">The skipAction.</param>
            <param name="objectName">The objectName.</param>
            <param name="absolutePath">The absolutePath.</param>
            <param name="xpath">The xpath.</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.UseChecksum(Cake.WebDeploy.DeploySettings,System.Boolean)">
            <summary>
            Sets if deployment compares each file using a checksum value instead of datetime
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="useChecksum">The useChecksum</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettingsExtensions.UseAppOffline(Cake.WebDeploy.DeploySettings,System.Boolean)">
            <summary>
            Sets if the target web app should be put offline during the deployment process.
            </summary>
            <param name="settings">The publish settings.</param>
            <param name="useAppOffline">Wether to put the app offline or not.</param>
            <returns>The same <see cref="T:Cake.WebDeploy.DeploySettings"/> instance so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Cake.WebDeploy.IWebDeployManager">
            <summary>
            Responsible for deploying packages
            </summary>
        </member>
        <member name="M:Cake.WebDeploy.IWebDeployManager.Deploy(Cake.WebDeploy.DeploySettings)">
            <summary>
            Deploys the content of a website
            </summary>
            <param name="settings">The deployment settings.</param>
            <returns>The <see cref="T:Microsoft.Web.Deployment.DeploymentChangeSummary"/> that was applied during the deployment.</returns>
        </member>
        <member name="T:Cake.WebDeploy.NamespaceDoc">
            <summary>
            This namespace contains WebDeploy aliases and related members.
            </summary>
        </member>
        <member name="T:Cake.WebDeploy.DeploySettings">
            <summary>
            The settings used for the deployment
            </summary>
        </member>
        <member name="M:Cake.WebDeploy.DeploySettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.WebDeploy.DeploySettings" /> class.
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.PublishUrl">
            <summary>
            Gets or sets the url to publish that package to
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.AgentType">
            <summary>
            Gets or sets the type of remote agent to connect to
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.NTLM">
            <summary>
            Gets or sets if NTLM authentication should be used
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.AllowUntrusted">
            <summary>
            Gets or sets if untrusted certificates should be allowed
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.ComputerName">
            <summary>
            Gets or sets the computer name to publish to
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.Port">
            <summary>
            Sets the remote port to connect on
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.SiteName">
            <summary>
            Sets the name of the website to publish
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.Username">
            <summary>
            Gets or sets the credentials to use when connecting
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.Password">
            <summary>
            Gets or sets the credentials to use when connecting
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.TraceLevel">
            <summary>
            Gets or sets the logging trace level
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.Delete">
            <summary>
            Gets or sets if files that no longer exist should be deleted
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.WhatIf">
            <summary>
            Gets or sets if operations will not be executed but events will still be fired
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.UseChecksum">
            <summary>
            Gets or sets if deployment compares each file using a checksum value instead of datetime
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.SourcePath">
            <summary>
            Gets or sets the source of the package to publish
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.DestinationPath">
            <summary>
            Gets or sets the destination of the package to publish to
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.ParametersFilePath">
            <summary>
            Gets or sets the location of the SetParameters.xml file
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.Parameters">
            <summary>
            Gets or sets the <see cref="P:Cake.WebDeploy.DeploySettings.Parameters" />.
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.SkipRules">
            <summary>
            Gets or sets the <see cref="P:Cake.WebDeploy.DeploySettings.SkipRules" />.
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.DeploySettings.UseAppOffline">
            <summary>
            Gets or sets the AppOffline rule
            </summary>
        </member>
        <member name="T:Cake.WebDeploy.RemoteAgent">
            <summary>
            The type of agent used during the deplyment
            </summary>
        </member>
        <member name="F:Cake.WebDeploy.RemoteAgent.WMSvc">
            <summary>
            IIS Web Management Service
            </summary>
        </member>
        <member name="F:Cake.WebDeploy.RemoteAgent.MSDepSvc">
            <summary>
            Microsoft Deploymnent Service
            </summary>
        </member>
        <member name="F:Cake.WebDeploy.RemoteAgent.TempAgent">
            <summary>
            Temporary Agent
            </summary>
        </member>
        <member name="F:Cake.WebDeploy.RemoteAgent.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Cake.WebDeploy.SkipRule">
            <summary>
            Instructions that should be performed during the deployment
            </summary>
        </member>
        <member name="M:Cake.WebDeploy.SkipRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.WebDeploy.SkipRule" /> class.
            </summary>
        </member>
        <member name="M:Cake.WebDeploy.SkipRule.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.WebDeploy.SkipRule" /> class.
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.SkipRule.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.SkipRule.SkipAction">
            <summary>
            Gets or sets the SkipAction.
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.SkipRule.ObjectName">
            <summary>
            Gets or sets the ObjectName.
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.SkipRule.AbsolutePath">
            <summary>
            Gets or sets the AbsolutePath.
            </summary>
        </member>
        <member name="P:Cake.WebDeploy.SkipRule.XPath">
            <summary>
            Gets or sets the XPath.
            </summary>
        </member>
    </members>
</doc>
